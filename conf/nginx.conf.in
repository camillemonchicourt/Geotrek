proxy_cache_path ${parts['django'].deployroot}/var/nginxcache/ keys_zone=${options.cachename}:10m;

upstream app_server {
    server ${parts['gunicorn-app-conf'].bind} fail_timeout=0;
}

upstream api_server {
    server ${parts['gunicorn-api-conf'].bind} fail_timeout=0;
}

{% if 'tilecache-conf' in parts %}
upstream tile_server {
    server ${parts['gunicorn-tilecache-conf'].bind} fail_timeout=0;
}
{% end %}

server {
    listen ${options.port} {% if options.default in ['True', 'true'] %} default {% end %};
    server_name ${options.server_name};
    {% for h in [a for a in options.server_aliases.strip().split() if a.strip()]%ZZ}
    server_alias ${h};
    {% end %}
    server_name_in_redirect on;


    {% if options.real_ip.strip() %}
    set_real_ip_from  ${options.real_ip.strip()};
    real_ip_header X-Forwarded-For;
    {% end %}

    access_log ${options.accesslog} ${options.logformat};
    error_log ${options.errorlog} ${options.level};

    client_max_body_size 10M;

    include ${parts['django'].deployroot}/etc/nginx.d/*.conf;

    location ${parts['django'].staticurl[:-1]} {
        expires ${options.expiretime};
        alias ${parts['django'].staticroot};
    }

    location ${parts['django'].mediaurl_secure[:-1]} {
        internal;
        expires ${options.expiretime};
        alias ${parts['django'].mediaroot};
    }

    {% if 'tilecache-conf' in parts %}
    location /tiles {
        {% if options.cache in ['True', 'true'] %}
            proxy_cache             ${options.cachename};
            proxy_cache_key         $$scheme$$host$$uri$$is_args$$args;
            proxy_cache_valid       200  ${options.cachetime};
            proxy_cache_use_stale   error timeout invalid_header;
        {% end %}

        proxy_pass  http://tile_server/1.0.0;
    }
    {% end %}

    location / {
        proxy_set_header X-Forwarded-Host $$host;
        proxy_set_header X-Forwarded-Server $$host;
        proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;

        proxy_set_header Host $$http_host;
        proxy_redirect off;

        keepalive_timeout 0;

        {% if options.cache in ['True', 'true'] %}
            proxy_cache             ${options.cachename};
            proxy_cache_key         $$scheme$$host$$uri$$is_args$$args;
            proxy_cache_valid       200  ${options.cachetime};
            proxy_cache_use_stale   error timeout invalid_header;
        {% end %}

        {% if parts['settings'].rooturl %}
        # For capture and some redirections problems behind reverse proxy
        rewrite ^${parts['settings'].rooturl}(.*)$$ $$1 last;
        {% end %}

        location ~ ^/api {
            proxy_pass http://api_server;
            proxy_read_timeout ${parts['gunicorn-api-conf'].timeout}s;
        }

        proxy_pass  http://app_server;
        proxy_read_timeout ${parts['gunicorn-app-conf'].timeout}s;
    }
}
